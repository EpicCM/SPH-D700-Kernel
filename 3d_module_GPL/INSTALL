
SGX Embedded Systems DDK for the Linux kernel.
Copyright (C) 2008 Imagination Technologies Ltd. All rights reserved.
======================================================================

This file covers how to build and install the Imagination Technologies
SGX DDK for the Linux kernel. 


Build System Environment Variables
-------------------------------------------

The SGX DDK Build scripts depend on a number of environment variables 
being setup before compilation or installation of DDK software can 
commence:

$DISCIMAGE
The DDK Build scripts install files to the location specified by the 
DISCIMAGE environment variable, when the make install target is used. 
This should point to the target filesystem.
$ export DISCIMAGE=/path/to/filesystem

$KERNELDIR
When building the SGX DDK kernel module, the build needs access 
to the headers of the Linux kernel 
$ export KERNELDIR=/path/to/kernel

$PATH
If a cross compiler is being used make sure the PATH environment variable 
includes the path to the toolchain
$ export PATH=$PATH:/path/to/toolchain

$CROSS_COMPILE
Since the SGX DDK Build scripts are geared toward a cross-compilation 
workflow, the CROSS_COMPILE environment variable needs to be set 
$ export CROSS_COMPILE=toolchain-prefix-


Build and Install Instructions
-------------------------------------------

The SGX DDK configures different target builds within directories under 
eurasiacon/build/linux/. 

The supported build targets are:

	all		Makes everything
	clean	Removes all intermediate files created by a build.
	clobber	Removes all binaries for all builds as well.
	install	Runs the install script generated by the build.

The following variables may be set on the command line to influence a build. 

	BUILD	The type of build being performed. 
			Alternatives are release, timing or debug. 
	CFLAGS	Build dependent	optimisations and debug information flags.  
	SILENT	Determines whether text of commands is produced during build.  


[How to build 3D module]
1. Build kernel

2. change to the appropriate target directory, e.g.:
$ cd eurasiacon/build/linux/smdkc110_android/kbuild

3. configure the followings:
export KERNELDIR=/path/to/kernel
export CROSS_COMPILE=toolchain-prefix-
export ANDROID_ROOT=/path/to/android_root

4. Issue the make command:
$ make BUILD=release
or
$ make BUILD=release CROSS_COMPILE=toolchain-prefix-


The DDK software must be installed by the root user.  Become the root user:
$ su

Install the DDK software:
$ make install

Become an ordinary user again:
$ exit

5. Check output files and apply these files to build system(module is included on ramdisk(initrd))
	services4/srvkm/env/linux/kbuild/prvsrvkm.o
	services4/3rdparty/s3c_bc/kbuild/s3c_bc.o
	services4/3rdparty/s3c_lcd/kbuild/s3c_lcd.o


